{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\rtsp-overlay-app\\\\frontend\\\\src\\\\components\\\\OverlayEditor.js\";\nimport React from 'react';\nimport { Rnd } from 'react-rnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OverlayEditor({\n  overlays,\n  setOverlays\n}) {\n  const addText = async () => {\n    const payload = {\n      name: 'New text',\n      type: 'text',\n      content: 'Hello',\n      x: 10,\n      y: 10,\n      width: 150,\n      height: 40\n    };\n    const res = await fetch('/api/overlays', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    const data = await res.json();\n    setOverlays(prev => [...prev, data]);\n  };\n  const saveItem = async (id, updates) => {\n    try {\n      const exists = overlays.find(o => o._id === id);\n      if (!exists) return; // skip saving if deleted\n\n      // Optional: remove _id from payload (MongoDB PUT should not include _id)\n      const {\n        _id,\n        ...payload\n      } = updates;\n      const res = await fetch(`/api/overlays/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!res.ok) {\n        console.error('Failed to save overlay', res.statusText);\n        return;\n      }\n      const data = await res.json();\n      setOverlays(prev => prev.map(it => it._id === id ? data : it));\n    } catch (err) {\n      console.error('Error in saveItem:', err);\n    }\n  };\n  const deleteItem = async id => {\n    await fetch(`/api/overlays/${id}`, {\n      method: 'DELETE'\n    });\n    setOverlays(prev => prev.filter(it => it._id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay-editor\",\n    style: {\n      marginTop: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addText,\n      children: \"Add Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-canvas\",\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '300px',\n        border: '1px solid #ccc',\n        marginTop: '10px'\n      },\n      children: overlays.map(it => /*#__PURE__*/_jsxDEV(Rnd, {\n        size: {\n          width: it.width,\n          height: it.height\n        },\n        position: {\n          x: it.x,\n          y: it.y\n        },\n        onDragStop: (e, d) => saveItem(it._id, {\n          ...it,\n          x: d.x,\n          y: d.y\n        }),\n        onResizeStop: (e, direction, ref, delta, position) => saveItem(it._id, {\n          ...it,\n          width: parseInt(ref.style.width),\n          height: parseInt(ref.style.height),\n          x: position.x,\n          y: position.y\n        }),\n        bounds: \"parent\",\n        style: {\n          border: '1px dashed #ddd',\n          background: 'rgba(255,255,255,0.6)'\n        },\n        children: it.type === 'text' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: it.content\n            // Update local state immediately\n            ,\n            onChange: e => setOverlays(prev => prev.map(o => o._id === it._id ? {\n              ...o,\n              content: e.target.value\n            } : o))\n            // Save to backend only on blur\n            ,\n            onBlur: e => saveItem(it._id, {\n              ...it,\n              content: e.target.value\n            }),\n            style: {\n              width: '100%',\n              height: '100%',\n              resize: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation(); // prevent triggering saveItem on drag/resize\n              deleteItem(it._id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: it.content,\n          alt: \"overlay\",\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, it._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c = OverlayEditor;\nvar _c;\n$RefreshReg$(_c, \"OverlayEditor\");","map":{"version":3,"names":["React","Rnd","jsxDEV","_jsxDEV","OverlayEditor","overlays","setOverlays","addText","payload","name","type","content","x","y","width","height","res","fetch","method","headers","body","JSON","stringify","data","json","prev","saveItem","id","updates","exists","find","o","_id","ok","console","error","statusText","map","it","err","deleteItem","filter","className","style","marginTop","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","position","border","size","onDragStop","e","d","onResizeStop","direction","ref","delta","parseInt","bounds","background","padding","value","onChange","target","onBlur","resize","stopPropagation","src","alt","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/rtsp-overlay-app/frontend/src/components/OverlayEditor.js"],"sourcesContent":["import React from 'react'\nimport { Rnd } from 'react-rnd'\n\nexport default function OverlayEditor({overlays, setOverlays}){\n  \n  const addText = async ()=>{\n    const payload = { name: 'New text', type: 'text', content: 'Hello', x: 10, y: 10, width: 150, height: 40 }\n    const res = await fetch('/api/overlays',{\n      method:'POST',\n      headers:{'Content-Type':'application/json'},\n      body: JSON.stringify(payload)\n    })\n    const data = await res.json()\n    setOverlays(prev=>[...prev, data])\n  }\n\n  const saveItem = async (id, updates) => {\n  try {\n    const exists = overlays.find(o => o._id === id);\n    if (!exists) return; // skip saving if deleted\n\n    // Optional: remove _id from payload (MongoDB PUT should not include _id)\n    const { _id, ...payload } = updates;\n\n    const res = await fetch(`/api/overlays/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    });\n\n    if (!res.ok) {\n      console.error('Failed to save overlay', res.statusText);\n      return;\n    }\n\n    const data = await res.json();\n    setOverlays(prev => prev.map(it => it._id === id ? data : it));\n  } catch (err) {\n    console.error('Error in saveItem:', err);\n  }\n};\n\n\n\n  const deleteItem = async (id)=>{\n    await fetch(`/api/overlays/${id}`,{method:'DELETE'})\n    setOverlays(prev => prev.filter(it=>it._id!==id))\n  }\n\n  return (\n    <div className=\"overlay-editor\" style={{ marginTop: '10px' }}>\n  <button onClick={addText}>Add Text</button>\n  <div className=\"editor-canvas\" style={{ position: 'relative', width: '100%', height: '300px', border: '1px solid #ccc', marginTop: '10px' }}>\n    {overlays.map(it => (\n      <Rnd\n        key={it._id}\n        size={{ width: it.width, height: it.height }}\n        position={{ x: it.x, y: it.y }}\n        onDragStop={(e, d) => saveItem(it._id, { ...it, x: d.x, y: d.y })}\n        onResizeStop={(e, direction, ref, delta, position) =>\n          saveItem(it._id, {\n            ...it,\n            width: parseInt(ref.style.width),\n            height: parseInt(ref.style.height),\n            x: position.x,\n            y: position.y,\n          })\n        }\n        bounds=\"parent\"\n        style={{ border: '1px dashed #ddd', background: 'rgba(255,255,255,0.6)' }}\n      >\n        {it.type === 'text' ? (\n          <div style={{ padding: 4 }}>\n            <textarea\n              value={it.content}\n              // Update local state immediately\n              onChange={e =>\n                setOverlays(prev => prev.map(o => (o._id === it._id ? { ...o, content: e.target.value } : o)))\n              }\n              // Save to backend only on blur\n              onBlur={e => saveItem(it._id, { ...it, content: e.target.value })}\n              style={{ width: '100%', height: '100%', resize: 'none' }}\n            />\n            <button\n              onClick={e => {\n                e.stopPropagation(); // prevent triggering saveItem on drag/resize\n                deleteItem(it._id);\n              }}\n            >\n              Delete\n            </button>\n          </div>\n        ) : (\n          <img src={it.content} alt=\"overlay\" style={{ width: '100%', height: '100%' }} />\n        )}\n      </Rnd>\n    ))}\n  </div>\n</div>\n\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}